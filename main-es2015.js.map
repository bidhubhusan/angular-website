{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/cards/cards.component.html","./src/app/cards/cards.component.ts","./src/app/data.config.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/services/card-data.service.ts","./src/app/services/get-card-details.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CardsComponent } from './cards/cards.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CardsComponent,\n    pathMatch: 'full',\n    data: { content: 'one' }\n  },\n  {\n    path: 'pageone',\n    component: CardsComponent,\n    data: { content: 'one' }\n  },\n  {\n    path: 'pagetwo',\n    component: CardsComponent,\n    data: { content: 'two' }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"main__wrapper\">\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  title = 'my-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { CardDataService } from './services/card-data.service'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatCheckboxModule} from '@angular/material/checkbox';\nimport { HeaderComponent } from './header/header.component';\nimport { \n  MatGridListModule, \n  MatTabsModule\n } from '@angular/material';\nimport { CardsComponent } from './cards/cards.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    CardsComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MatGridListModule,\n    HttpClientModule,\n    InMemoryWebApiModule.forRoot(CardDataService)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<article class=\"rate-card__container\">\n        <mat-grid-list cols=\"2\" rowHeight=\"290px\">\n                <mat-grid-tile class=\"rate-card__items type{{carobj.id}}\" *ngFor=\"let carobj of cardPageData; let i = index\" [ngClass]=\"{'disable': !carobj.selected && isCardBoughtService}\">\n                        <h1>{{carobj.type}}</h1>\n                        <div class=\"rate-card__price\" *ngIf=\"!carobj.selected\">{{carobj.price}}</div>\n                        <div class=\"rate-card__price\" *ngIf=\"carobj.selected\">Bought</div>\n                        <div class=\"rate-card__details\">{{carobj.detail}}</div>\n                        <button *ngIf=\"!carobj.selected\" class=\"buy-btn\" (click)=\"selectYouCard(carobj)\">Buy</button>\n                        <button *ngIf=\"carobj.selected\" class=\"cancel-btn\" (click)=\"deselectCards(carobj)\">Cancel</button>\n                </mat-grid-tile>\n        </mat-grid-list>\n</article>","import { Component, OnInit } from '@angular/core';\nimport { cardModel } from '../models/data.model';\nimport { GetCardDetailsService } from '../services/get-card-details.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-cards',\n  templateUrl: './cards.component.html',\n  styleUrls: ['./cards.component.scss']\n})\nexport class CardsComponent implements OnInit {\n\n  constructor(public route: ActivatedRoute, public GetCardDetailsService: GetCardDetailsService) { }\n  /* variable declaration */\n  viewType: string;\n  cardPageData: Array<cardModel>;\n  isCardBoughtService: boolean;\n\n  ngOnInit() {\n    this.viewType = this.route.snapshot.data.content\n    this.getCardDetails();\n  }\n  getCardDetails() {\n    this.GetCardDetailsService.getCardDetails().subscribe((data: Array<cardModel>) => {\n      this.getDataStatus(this.GetCardDetailsService.isBoughtCard);\n      this.cardPageData = this.viewType == 'one' ? data.filter(data => data['category'] == 'strater') : data.filter(data => data['category'] == 'proffessional');\n    })\n  }\n  selectYouCard(cardModel : cardModel){\n    cardModel.selected = true;  \n    this.updateStatus(true);\n    this.updateCardData(cardModel);\n  }\n  updateCardData(cardModel : cardModel) {\n    this.GetCardDetailsService.updateCardDetails(cardModel).subscribe((data) => {\n      this.getCardDetails();\n    })\n  }\n  deselectCards(cardModel: cardModel)  {\n    cardModel.selected = false;\n    this.updateStatus(false);\n    this.updateCardData(cardModel);\n  }\n  updateStatus(status: boolean){\n    this.GetCardDetailsService.isBoughtCard = status;\n    this.isCardBoughtService = this.GetCardDetailsService.isBoughtCard;\n  }\n  getDataStatus(status: boolean){\n    this.isCardBoughtService = status;\n  }\n}\n","export const cardData = [\n    {\n        id: 1,\n        type: \"STARTER\",\n        price: \"$1\",\n        detail: \"Starter features for your business to grow.\",\n        selected: false,\n        category: 'strater'\n    },\n    {\n        id: 2,\n        type: \"REGULAR\",\n        price: \"$25\",\n        detail: \"Regular features for your business to grow.\",\n        selected: false,\n        category: 'strater'\n    },\n    {\n        id: 3,\n        type: \"PROFESSIONAL\",\n        price: \"$75\",\n        detail: \"Professional features for your business to grow.\",\n        selected: false,\n        category: 'proffessional'\n    },\n    {\n        id: 4,\n        type: \"ULTIMATE\",\n        price: \"$115\",\n        detail: \"The ultimate set of features for your business to grow.\",\n        selected: false,\n        category: 'proffessional'\n    }\n]","<header class=\"header__wrapper\">\n        <mat-grid-list cols=\"2\" rowHeight=\"50px\">\n            <mat-grid-tile class=\"header__logo\">\n                    <h1>MyApp</h1>\n            </mat-grid-tile>\n            <mat-grid-tile class=\"header__nav\">\n                <nav>\n                    <a routerLinkActive=\"active\" routerLink=\"pageone\">One</a>\n                    <a routerLinkActive=\"active\" routerLink=\"pagetwo\">Two</a>\n                </nav>\n            </mat-grid-tile>\n        </mat-grid-list>\n</header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { cardData } from '../data.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardDataService implements InMemoryDbService {\n  constructor() { }\n  offersData = cardData;\n\n  createDb() {\n    let offersData = cardData;\n    return {offersData};\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { cardModel } from '../models/data.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetCardDetailsService {\n\n  isBoughtCard: boolean = false;\n  /* API_URL from environment */\n  API_URL = environment.API_URL;\n\n  constructor(private httpClient: HttpClient) { }\n\n  /* get Card Details */\n  public getCardDetails() {\n    return this.httpClient.get<cardModel[]>(this.API_URL + 'offersData');\n  }\n  /* Get Selected Card Details */\n  public getSelectedCardDetails() {\n    return this.httpClient.get<cardModel[]>(`${this.API_URL + 'offersData'}?selected=^true`);\n  }\n  /* To Updated Card Details */\n  public updateCardDetails(post: cardModel) {\n    return this.httpClient.put(`${this.API_URL + 'offersData'}/${post.id}`, post);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: \"http://localhost:4200/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}